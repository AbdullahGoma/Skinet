Extenssions that we need:
C#
C# Extenssion
Material Icon Theme
nuget gallery
sqlite


Commands:
code .
dotnet new list
dotnet new sln
dotnet new webapi -n API
dotnet sln add API/
dotnet sln list
Ctrl + ` (backtick) => toggle terminal vs code

Ctrl + shift + p => .Net Generate Assets ....

cd .\API\
dotnet run 

dotnet dev-certs https 
dotnet dev-certs https --trust

dotnet watch
dotnet watch --no-hot-reload

dotnet tool install --global dotnet-ef --version 8.0.7
dotnet ef

dotnet ef migrations add InitialCreate -o Data/Migrations

dotnet ef database update
dotnet new classlib -n Core
dotnet new classlib -n Infrastructure
dotnet sln add Infrastructure
dotnet sln add Core
dotnet add reference ../Infrastructure => In API
dotnet add reference ../Core => In Infrastructure
dotnet build
dotnet new gitignore

dotnet ef database drop -p .\Infrastructure\ -s .\API\
dotnet ef migrations remove -p .\Infrastructure\ -s .\API\


ng new client => Create new angular application
cd client
ng serve => start program
https://github.com/FiloSottile/mkcert


in Power Shell (admin)
Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
choco install mkcert
mkcert -install

mkdir ssl
cd sll
mkcert localhost



ng add @angular/material
npm install -D tailwindcss postcss autoprefixer
npx tailwindcss init

updte tailwind.config.js 
to 
/** @type {import('tailwindcss').Config} */
module.exports = {
  content: [
    "./src/**/*.{html,ts}",
  ],
  theme: {
    extend: {},
  },
  plugins: [],
}


update style.scss to
@tailwind base;
@tailwind components;
@tailwind utilities;


install angular and tailwind and auto rename tag extensions

ng generate help

ng g c layout/header --dry--run => ng generate component layo......

ng g c layout/header --skip-tests


npx tsc src/demo.ts
node src/demo.js

ng g service core/services/shop --dry-run

ng g service core/services/shop --skip-tests 

ng g c features/shop --dry-run
ng g c features/shop --skip-tests

ng g c features/shop/product-item --skip-tests

ng g c features/shop/filters-dialog --skip-tests

ng g c features/home --skip-tests
ng g c features/shop/product-details --skip-tests


ng g c features/shop/product-details --skip-tests

ng g c shared/components/not-found --skip-tests
ng g c shared/components/server-error --skip-tests


ng g interceptor core/interceptors/error --dry-run
ng g interceptor core/interceptors/error --skip-tests


ng g s core/services/snackbar --skip-tests

ng g interceptor core/interceptors/loading --skip-tests
ng g s core/services/busy --skip-tests


docker-compose up --detach 

docker compose down

docker compose up -d


dotnet ef migrations remove -p .\Infrastructure\ -s .\API\
dotnet ef migrations add InitialCreate -s API -p Infrastructure 
dotnet ef database drop -p .\Infrastructure\ -s .\API\
dotnet ef database update -s .\API\ -p .\Infrastructure\

dotnet ef migrations add UpdateDescription -s API -p Infrastructure



dotnet add package Microsoft.Data.SqlClient --version 5.0.0 -s API -p Infrastructure

ng g s core/services/cart --skip-tests
ng g c features/cart --skip-tests

npm install nanoid

ng g environments

ng g s core/services/init --skip-tests

ng g c features/cart/cart-item --skip-tests
ng g c shared/components/order-summary --skip-tests

ng g s core/services/checkout --skip-tests
ng g c features/checkout --skip-tests



// Identity
Microsoft.Extensions.Identity.Stores => core
microsoft.aspnetcore.identity.entityframeworkcore => infrastructure

dotnet ef migrations add IdentityAdded -s API -p .\Infrastructure\


dotnet ef migrations add AddressAdded -s .\API\ -p .\Infrastructure\ 


ng g s core/services/account --skip-tests 

ng g c features/account/login --skip-tests
ng g c features/account/register --skip-tests


tom@test.com
Pa$$w0rd

ng g interceptor core/interceptors/auth --skip-tests

ng g c shared/components/text-input --skip-tests

ng g guard core/guards/auth --dry-run

ng g guard core/guards/auth --implements CanActivate --skip-tests
ng g guard core/guards/emptyCart --implements CanActivate --skip-tests

ng g c shared/components/empty-state --skip-tests


dotnet ef migrations add DeliveryMethodsAdded -p .\Infrastructure\ -s .\API\ 

npm install @stripe/stripe-js

ng g s core/services/stripe --skip-tests

ng g c features/checkout/checkout-delivery --skip-tests

ng g c features/checkout/checkout-review --skip-tests


ng g pipe shared/pipes/address --skip-tests
ng g c features/checkout/checkout-success --skip-tests

















































